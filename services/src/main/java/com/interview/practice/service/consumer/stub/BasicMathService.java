
package com.interview.practice.service.consumer.stub;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BasicMathService", targetNamespace = "http://service.practice.interview.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BasicMathService {


    /**
     * 
     * @param number2
     * @param number1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.AddResponse")
    @Action(input = "http://service.practice.interview.com/BasicMathService/addRequest", output = "http://service.practice.interview.com/BasicMathService/addResponse")
    public int add(
            @WebParam(name = "number1", targetNamespace = "")
            int number1,
            @WebParam(name = "number2", targetNamespace = "")
            int number2);

    /**
     * 
     * @param number2
     * @param number1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divide", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.Divide")
    @ResponseWrapper(localName = "divideResponse", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.DivideResponse")
    @Action(input = "http://service.practice.interview.com/BasicMathService/divideRequest", output = "http://service.practice.interview.com/BasicMathService/divideResponse")
    public int divide(
            @WebParam(name = "number2", targetNamespace = "")
            int number2,
            @WebParam(name = "number1", targetNamespace = "")
            int number1);

    /**
     * 
     * @param number2
     * @param number1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiply", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.Multiply")
    @ResponseWrapper(localName = "multiplyResponse", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.MultiplyResponse")
    @Action(input = "http://service.practice.interview.com/BasicMathService/multiplyRequest", output = "http://service.practice.interview.com/BasicMathService/multiplyResponse")
    public int multiply(
            @WebParam(name = "number1", targetNamespace = "")
            int number1,
            @WebParam(name = "number2", targetNamespace = "")
            int number2);

    /**
     * 
     * @param number2
     * @param number1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subtract", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.Subtract")
    @ResponseWrapper(localName = "subtractResponse", targetNamespace = "http://service.practice.interview.com/", className = "com.interview.practice.service.SubtractResponse")
    @Action(input = "http://service.practice.interview.com/BasicMathService/subtractRequest", output = "http://service.practice.interview.com/BasicMathService/subtractResponse")
    public int subtract(
            @WebParam(name = "number2", targetNamespace = "")
            int number2,
            @WebParam(name = "number1", targetNamespace = "")
            int number1);

}
